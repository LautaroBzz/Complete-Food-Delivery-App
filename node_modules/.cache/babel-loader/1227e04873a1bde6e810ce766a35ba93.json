{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\GIT PROYECTS\\\\Food Order App\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existing];\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  ;\n  return defaultCartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartstate);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"WyYgp8/ATIagphpbiNtssWWNrqs=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/GIT PROYECTS/Food Order App/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultCartstate","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","existing","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYc,QAAZ,CAAzB;AACA,UAAMC,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEe,YADF;AAELd,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AAAA;AACD,SAAOP,gBAAP;AACD,CAZD;;AAcA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMsB,oBAAoB,GAAId,IAAD,IAAU;AACrCa,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,yBAAyB,GAAIV,EAAD,IAAQ;AACxCQ,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,QAAP;AAAiBO,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADC;AAElBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["\r\nimport CartContext from \"./CartContext\";\r\nimport React, { useReducer } from \"react\";\r\n\r\nconst defaultCartstate = {\r\n  items: [],\r\n  totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n    const existingCartItem = state.items[existing]\r\n    const updatedItems = state.items.concat(action.item);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  };\r\n  return defaultCartstate;  \r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartstate);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: \"ADD\", item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: \"REMOVE\", id: id});\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler, \r\n    removeItem: removeItemFromCartHandler\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n};\r\n \r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}
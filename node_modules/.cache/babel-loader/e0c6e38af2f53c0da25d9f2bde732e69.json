{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\GIT PROYECTS\\\\Food Order App\\\\src\\\\Components\\\\Foods\\\\SingleFoodItem\\\\FoodItemForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./FoodItemForm.module.css\";\nimport Input from \"../../UI/Input\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FoodItemForm = props => {\n  _s();\n\n  const [amountValid, setAmountValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount; // from string to number\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountValid(false);\n      return;\n    }\n\n    ;\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: amountInputRef // \n        ,\n        label: \"Amount\",\n        input: {\n          id: \"amount\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), !amountValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid amount (1-5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FoodItemForm, \"EkZPogRhRfmjRtPcLJxE4XQqOiw=\");\n\n_c = FoodItemForm;\nexport default FoodItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodItemForm\");","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/GIT PROYECTS/Food Order App/src/Components/Foods/SingleFoodItem/FoodItemForm.js"],"names":["classes","Input","useRef","useState","FoodItemForm","props","amountValid","setAmountValid","amountInputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AACA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMK,cAAc,GAAGN,MAAM,EAA7B;;AAEA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAH2B,CAGmB;;AAC9C,QAAIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCF,mBAAmB,GAAG,CAA3D,IAAgEA,mBAAmB,GAAG,CAA1F,EAA6F;AAC3FR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD;;AAAA;AACDF,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACD,GATD;;AAWA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAEf,OAAO,CAACmB,IAAzB;AAA+B,MAAA,QAAQ,EAAEV,aAAzC;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAED,cADP,CACwB;AADxB;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,EAAE;AACLY,UAAAA,EAAE,EAAC,WAAWf,KAAK,CAACe,EADf;AAELC,UAAAA,IAAI,EAAC,QAFA;AAGLC,UAAAA,GAAG,EAAC,GAHC;AAILC,UAAAA,GAAG,EAAC,GAJC;AAKLC,UAAAA,IAAI,EAAC,GALA;AAMLC,UAAAA,YAAY,EAAC;AANR;AAHT;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcG,CAACnB,WAAD,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CApCD;;GAAMF,Y;;KAAAA,Y;AAsCN,eAAeA,YAAf","sourcesContent":["\r\nimport classes from \"./FoodItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst FoodItemForm = (props) => {\r\n  const [amountValid, setAmountValid] = useState(true);\r\n\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount;   // from string to number\r\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\r\n      setAmountValid(false);\r\n      return;\r\n    };\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <Input \r\n          ref={amountInputRef}  // \r\n          label=\"Amount\" \r\n          input={{\r\n            id:\"amount\" + props.id, \r\n            type:\"number\", \r\n            min:\"1\", \r\n            max:\"5\", \r\n            step:\"1\", \r\n            defaultValue:\"1\"\r\n          }}\r\n        />\r\n        <button type=\"submit\">Add to Cart</button>\r\n        {!amountValid && <p>Please enter a valid amount (1-5)</p>}\r\n      </form>\r\n    </>\r\n  ) \r\n};\r\n\r\nexport default FoodItemForm;\r\n"]},"metadata":{},"sourceType":"module"}